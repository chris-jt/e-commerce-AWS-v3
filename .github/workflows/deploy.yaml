name: Deploy to EKS

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
  CLUSTER_NAME: devops-cluster

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Make script executable
      run: chmod +x ./scripts/build-push-images.sh
    
    - name: Build, tag, and push images to Amazon ECR
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest ./src/frontend
        docker tag frontend:latest $ECR_REGISTRY/frontend:latest
        docker push $ECR_REGISTRY/frontend:latest
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/products:latest ./src/products
        docker tag products:latest ${{ secrets.DOCKERHUB_USERNAME }}/products:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/products:latest
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/merchandise:latest ./src/merchandise
        docker tag merchandise:latest ${{ secrets.DOCKERHUB_USERNAME }}/merchandise:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/merchandise:latest  
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/shopping-card:latest ./src/shopping-card
        docker tag shopping-card:latest ${{ secrets.DOCKERHUB_USERNAME }}/shopping-card:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/shopping-card:latest            
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}

  deploy-to-eks:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        ./scripts/deploy-to-eks.sh

    - name: Get LoadBalancer DNS
      run: |
        LB_DNS=$(kubectl get svc -n ingress-nginx ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "LoadBalancer DNS: $LB_DNS"
        echo "LOAD_BALANCER_DNS=$LB_DNS" >> $GITHUB_ENV

    - name: Output service URLs
      run: |
        echo "Frontend URL: http://${{ env.LOAD_BALANCER_DNS }}/frontend"
        echo "Products URL: http://${{ env.LOAD_BALANCER_DNS }}/products"
        echo "Shopping Cart URL: http://${{ env.LOAD_BALANCER_DNS }}/shopping-cart"
        echo "Merchandise URL: http://${{ env.LOAD_BALANCER_DNS }}/merchandise"